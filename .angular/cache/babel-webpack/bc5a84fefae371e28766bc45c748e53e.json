{"ast":null,"code":"import { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport jsPDF from 'jspdf';\nimport { SnackBarFailureComponent } from 'src/app/components/common/snack-bar-failure/snack-bar-failure.component';\nimport { SnackBarSuccessComponent } from 'src/app/components/common/snack-bar-success/snack-bar-success.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/order.service\";\nimport * as i2 from \"@angular/material/snack-bar\";\nimport * as i3 from \"@angular/material/dialog\";\nexport let HistoryComponent = /*#__PURE__*/(() => {\n  class HistoryComponent {\n    constructor(orderService, _snackBar, dialog) {\n      this.orderService = orderService;\n      this._snackBar = _snackBar;\n      this.dialog = dialog;\n      this.displayedColumns = ['id', 'email', 'actions'];\n      this.orderDocuments = [];\n      this.operations = [];\n      this.data = [];\n      this.cellConfig = [{\n        name: \"id\",\n        prompt: \"N°\",\n        align: \"center\",\n        padding: 3,\n        width: 50\n      }, {\n        name: \"phone\",\n        prompt: \"Téléphone\",\n        align: \"center\",\n        padding: 3,\n        width: 50\n      }, {\n        name: \"city\",\n        prompt: \"Ville\",\n        align: \"center\",\n        padding: 3,\n        width: 50\n      }, {\n        name: \"price\",\n        prompt: \"Prix\",\n        align: \"center\",\n        padding: 3,\n        width: 50\n      }];\n    }\n\n    ngOnInit() {\n      this.orderService.listHistoryOrderDocument().subscribe(result => {\n        this.orderDocuments = result;\n        this.dataSource = new MatTableDataSource(this.orderDocuments);\n        this.dataSource.paginator = this.paginator;\n        this.dataSource.sort = this.sort;\n      }, error => {\n        this.openSnackBarFailure(error);\n      });\n    }\n\n    openSnackBarFailure(message) {\n      this._snackBar.openFromComponent(SnackBarFailureComponent, {\n        data: message,\n        panelClass: 'app-snack-bar-failure',\n        duration: 5000\n      });\n    }\n\n    openSnackBarSuccess(message) {\n      this._snackBar.openFromComponent(SnackBarSuccessComponent, {\n        data: message,\n        panelClass: 'app-snack-bar-success',\n        duration: 5000\n      });\n    }\n\n    ngAfterViewInit() {\n      if (this.dataSource != undefined) {\n        this.dataSource.paginator = this.paginator;\n        this.dataSource.sort = this.sort;\n      }\n    }\n\n    applyFilter(event) {\n      const filterValue = event.target.value;\n      this.dataSource.filter = filterValue.trim().toLowerCase();\n\n      if (this.dataSource.paginator) {\n        this.dataSource.paginator.firstPage();\n      }\n    }\n\n    refresh() {\n      this.orderService.listHistoryOrderDocument().subscribe(result => {\n        this.orderDocuments = result;\n        this.dataSource = new MatTableDataSource(this.orderDocuments);\n        this.dataSource.paginator = this.paginator;\n        this.dataSource.sort = this.sort;\n      }, error => {\n        this.openSnackBarFailure(error);\n      });\n    }\n\n    uploadDocument(id) {\n      this.orderService.listOrdersDetailsInDocumentInWait(id).subscribe(result => {\n        this.createPage(id, result);\n      }, error => {\n        this.openSnackBarFailure(error);\n      });\n    }\n\n    createPage(id, selectedOrders) {\n      var doc = new jsPDF('p', 'mm', 'a4'); // logo\n\n      var img = new Image();\n      img.src = '../../../../../assets/images/logo.png';\n      doc.addImage(img, 'png', 150, 10, 60, 40); //title\n\n      doc.setFont('courier', 'bold');\n      doc.setFontSize(32);\n      doc.text('Bon De Livraison', 20, 30); //separation line\n\n      doc.setLineWidth(0.5);\n      doc.line(10, 50, 200, 50);\n      this.getTableList(selectedOrders);\n\n      for (let order of selectedOrders) {\n        //first page\n        let end = this.data.length > 15 ? 15 : this.data.length;\n        doc.table(10, 100, this.data.slice(0, end), this.cellConfig, {\n          headerBackgroundColor: \"#F6B853\",\n          fontSize: 11\n        });\n        this.data = this.data.slice(end, this.data.length);\n\n        if (this.data.length != 0) {\n          let pages = Math.floor(this.data.length / 20) + 1;\n\n          for (let i = 0; i < pages; i++) {\n            doc.addPage();\n            doc.addImage(img, 'png', 150, 10, 60, 40); //title\n\n            doc.setFont('courier', 'bold');\n            doc.setFontSize(32);\n            doc.text('Bon De Livraison', 20, 30); //separation line\n\n            doc.setLineWidth(0.5);\n            doc.line(10, 50, 200, 50);\n            end = this.data.length > 20 ? 20 : this.data.length;\n            doc.table(10, 60, this.data.slice(0, end), this.cellConfig, {\n              headerBackgroundColor: \"#F6B853\",\n              fontSize: 11\n            });\n            this.data = this.data.slice(end, this.data.length);\n          }\n        }\n\n        if (selectedOrders.indexOf(order) !== selectedOrders.length - 1) {\n          doc.addPage();\n        }\n      } // Signature\n\n\n      doc.setFont('helvetica', 'bold');\n      doc.text(\"Signature\", 20, 280);\n      doc.text(\"Signature\", 130, 280);\n      doc.setFont('courier', 'normal');\n      doc.text(\"Représentant Phoenix: ........\", 20, 284);\n      doc.text(\"Client: ........\", 130, 284);\n      doc.save('Bon_De_Livraison_N°_' + id + '.pdf');\n    }\n\n    isOuiOrNon(value) {\n      return value ? \"Oui\" : \"Non\";\n    }\n\n    isComment(comment) {\n      return comment === undefined || comment === null ? \"\" : comment;\n    }\n\n    getTableList(orders) {\n      this.data = [];\n\n      for (let order of orders) {\n        this.data.push({\n          id: order.id.toString(),\n          phone: order.phone,\n          ville: order.city,\n          price: order.price.toString()\n        });\n      }\n    }\n\n  }\n\n  HistoryComponent.ɵfac = function HistoryComponent_Factory(t) {\n    return new (t || HistoryComponent)(i0.ɵɵdirectiveInject(i1.OrderService), i0.ɵɵdirectiveInject(i2.MatSnackBar), i0.ɵɵdirectiveInject(i3.MatDialog));\n  };\n\n  HistoryComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: HistoryComponent,\n    selectors: [[\"app-history\"]],\n    viewQuery: function HistoryComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(MatPaginator, 5);\n        i0.ɵɵviewQuery(MatSort, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.paginator = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.sort = _t.first);\n      }\n    },\n    decls: 2,\n    vars: 0,\n    template: function HistoryComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"p\");\n        i0.ɵɵtext(1, \"history works!\");\n        i0.ɵɵelementEnd();\n      }\n    },\n    styles: [\"\"]\n  });\n  return HistoryComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}