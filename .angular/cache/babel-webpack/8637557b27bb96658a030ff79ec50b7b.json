{"ast":null,"code":"import { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SnackBarFailureComponent } from 'src/app/components/common/snack-bar-failure/snack-bar-failure.component';\nimport { SnackBarSuccessComponent } from 'src/app/components/common/snack-bar-success/snack-bar-success.component';\nimport { RefuseOrderRequest } from 'src/app/model/order';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/dialog\";\nimport * as i2 from \"@angular/material/snack-bar\";\nimport * as i3 from \"src/app/services/order.service\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"@angular/material/form-field\";\nimport * as i6 from \"@angular/material/input\";\nimport * as i7 from \"@angular/material/icon\";\nimport * as i8 from \"@angular/material/button\";\nexport let OrderCommentPopupComponent = /*#__PURE__*/(() => {\n  class OrderCommentPopupComponent {\n    constructor(dialogRef, data, _snackBar, orderService) {\n      this.dialogRef = dialogRef;\n      this.data = data;\n      this._snackBar = _snackBar;\n      this.orderService = orderService;\n      this.refuseOrderRequest = new RefuseOrderRequest();\n    }\n\n    ngOnInit() {}\n\n    refuseOrCancel() {\n      this.refuseOrderRequest.comment = this.comment;\n\n      if (this.data.type === \"refuse\") {\n        this.orderService.moveOrderToRefuse(this.data.id, this.refuseOrderRequest).subscribe(result => {\n          this.openSnackBarSuccess(\"La commande est refusée\");\n          this.dialogRef.close();\n        }, erro => {\n          this.openSnackBarFailure(erro);\n        });\n      } else if (this.data.type === \"cancel\") {\n        this.orderService.moveOrderToCancel(this.data.id, this.refuseOrderRequest).subscribe(result => {\n          this.openSnackBarSuccess(\"La commande est annulée\");\n          this.dialogRef.close();\n        }, erro => {\n          this.openSnackBarFailure(erro);\n        });\n      }\n    }\n\n    openSnackBarFailure(message) {\n      this._snackBar.openFromComponent(SnackBarFailureComponent, {\n        data: message,\n        panelClass: 'app-snack-bar-failure',\n        duration: 5000\n      });\n    }\n\n    openSnackBarSuccess(message) {\n      this._snackBar.openFromComponent(SnackBarSuccessComponent, {\n        data: message,\n        panelClass: 'app-snack-bar-success',\n        duration: 5000\n      });\n    }\n\n    isCommentValid() {\n      if (this.comment === undefined || this.comment.length < 5) {\n        return false;\n      }\n\n      return true;\n    }\n\n  }\n\n  OrderCommentPopupComponent.ɵfac = function OrderCommentPopupComponent_Factory(t) {\n    return new (t || OrderCommentPopupComponent)(i0.ɵɵdirectiveInject(i1.MatDialogRef), i0.ɵɵdirectiveInject(MAT_DIALOG_DATA), i0.ɵɵdirectiveInject(i2.MatSnackBar), i0.ɵɵdirectiveInject(i3.OrderService));\n  };\n\n  OrderCommentPopupComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: OrderCommentPopupComponent,\n    selectors: [[\"app-order-comment-popup\"]],\n    decls: 13,\n    vars: 3,\n    consts: [[\"appearance\", \"outline\", 1, \"description\"], [\"maxlength\", \"300\", \"name\", \"comment\", \"matInput\", \"\", \"placeholder\", \"Ex. Client ne reponds pas...\", 3, \"ngModel\", \"ngModelChange\"], [\"matSuffix\", \"\"], [\"align\", \"end\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", 3, \"disabled\", \"click\"]],\n    template: function OrderCommentPopupComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\");\n        i0.ɵɵelementStart(1, \"mat-form-field\", 0);\n        i0.ɵɵelementStart(2, \"mat-label\");\n        i0.ɵɵtext(3, \"Commentaire\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"textarea\", 1);\n        i0.ɵɵlistener(\"ngModelChange\", function OrderCommentPopupComponent_Template_textarea_ngModelChange_4_listener($event) {\n          return ctx.comment = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"mat-icon\", 2);\n        i0.ɵɵtext(6, \"description\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"mat-hint\", 3);\n        i0.ɵɵtext(8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"mat-hint\");\n        i0.ɵɵtext(10, \"* Motif de refus/annulation\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"button\", 4);\n        i0.ɵɵlistener(\"click\", function OrderCommentPopupComponent_Template_button_click_11_listener() {\n          return ctx.refuseOrCancel();\n        });\n        i0.ɵɵtext(12, \"Valider l'op\\u00E9ration\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.comment);\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate1(\"\", (ctx.comment == null ? null : ctx.comment.length) || 0, \"/300\");\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"disabled\", !ctx.isCommentValid());\n      }\n    },\n    directives: [i4.ɵNgNoValidate, i4.NgControlStatusGroup, i4.NgForm, i5.MatFormField, i5.MatLabel, i6.MatInput, i4.DefaultValueAccessor, i4.MaxLengthValidator, i4.NgControlStatus, i4.NgModel, i7.MatIcon, i5.MatSuffix, i5.MatHint, i8.MatButton],\n    styles: [\"button[_ngcontent-%COMP%]{margin-left:30px}\"]\n  });\n  return OrderCommentPopupComponent;\n})();\nexport class CommentData {}","map":null,"metadata":{},"sourceType":"module"}