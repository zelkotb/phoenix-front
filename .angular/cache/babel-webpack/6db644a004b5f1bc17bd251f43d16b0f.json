{"ast":null,"code":"import jsPDF from 'jspdf';\nimport { SnackBarFailureComponent } from 'src/app/components/common/snack-bar-failure/snack-bar-failure.component';\nimport { SnackBarSuccessComponent } from 'src/app/components/common/snack-bar-success/snack-bar-success.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/dialog\";\nimport * as i2 from \"src/app/services/order.service\";\nimport * as i3 from \"@angular/material/snack-bar\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"@angular/material/form-field\";\nimport * as i6 from \"@angular/material/select\";\nimport * as i7 from \"@angular/common\";\nimport * as i8 from \"@angular/material/button\";\nimport * as i9 from \"@angular/material/core\";\n\nfunction BLOrderPerCityPopupComponent_mat_option_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 4);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const c_r1 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", c_r1.name);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", c_r1.name, \" \");\n  }\n}\n\nexport let BLOrderPerCityPopupComponent = /*#__PURE__*/(() => {\n  class BLOrderPerCityPopupComponent {\n    constructor(dialogRef, orderService, _snackBar) {\n      this.dialogRef = dialogRef;\n      this.orderService = orderService;\n      this._snackBar = _snackBar;\n      this.city = \"\";\n      this.data = [];\n      this.cellConfig = [{\n        name: \"id\",\n        prompt: \"N°\",\n        align: \"center\",\n        padding: 3,\n        width: 60\n      }, {\n        name: \"phone\",\n        prompt: \"Téléphone\",\n        align: \"center\",\n        padding: 3,\n        width: 60\n      }, {\n        name: \"city\",\n        prompt: \"Ville\",\n        align: \"center\",\n        padding: 3,\n        width: 60\n      }, {\n        name: \"price\",\n        prompt: \"Prix\",\n        align: \"center\",\n        padding: 3,\n        width: 60\n      }, {\n        name: \"signature\",\n        prompt: \"Signature\",\n        align: \"center\",\n        padding: 3,\n        width: 60\n      }];\n    }\n\n    ngOnInit() {\n      this.orderService.listCitiesWithOrderExpidite().subscribe(result => {\n        this.cities = result.map(city => {\n          let cityObject = new City();\n          cityObject.name = city;\n          return cityObject;\n        });\n      }, error => {\n        this.openSnackBarFailure(error);\n      });\n    }\n\n    openSnackBarFailure(message) {\n      this._snackBar.openFromComponent(SnackBarFailureComponent, {\n        data: message,\n        panelClass: 'app-snack-bar-failure',\n        duration: 5000\n      });\n    }\n\n    openSnackBarSuccess(message) {\n      this._snackBar.openFromComponent(SnackBarSuccessComponent, {\n        data: message,\n        panelClass: 'app-snack-bar-success',\n        duration: 5000\n      });\n    }\n\n    generateDocument() {\n      this.orderService.listShippedOrdersByCity(this.city).subscribe(result => {\n        this.createPage(result);\n      }, error => {\n        this.openSnackBarFailure(error);\n      });\n    }\n\n    createPage(selectedOrders) {\n      var doc = new jsPDF('p', 'mm', 'a4'); // logo\n\n      var img = new Image();\n      img.src = '../../../../../assets/images/logo.png';\n      doc.addImage(img, 'png', 150, 10, 60, 40); //title\n\n      doc.setFont('courier', 'bold');\n      doc.setFontSize(32);\n      doc.text('Bon De Livraison', 20, 30); //separation line\n\n      doc.setLineWidth(0.5);\n      doc.line(10, 50, 200, 50); //phoenix info title\n\n      doc.setFont('helvetica', 'bold');\n      doc.setFontSize(11);\n      doc.text(\"PHOENIX FULFILLMENT\", 20, 70); //phoenix info\n\n      doc.setFont('courier', 'normal');\n      doc.text(\"14° Avenue Hassan 2\", 20, 75);\n      doc.text(\"22000 Casablanca Maroc\", 20, 79);\n      doc.text(\"Téléphone: +212 606416930\", 20, 83); //bon info title\n\n      doc.setFont('helvetica', 'bold');\n      doc.text('INFORMATION DU BON', 130, 70); //bon info\n\n      doc.setFont('courier', 'normal');\n      doc.text(\"Nomber de colis : \" + selectedOrders.length, 130, 79);\n      doc.text(\"Prix Total : \" + selectedOrders.reduce((x, y) => x + y.price, 0) + \" Dhs\", 130, 83);\n      this.getTableList(selectedOrders); //first page\n\n      let end = this.data.length > 15 ? 15 : this.data.length;\n      doc.table(10, 100, this.data.slice(0, end), this.cellConfig, {\n        headerBackgroundColor: \"#F6B853\",\n        fontSize: 11\n      });\n      this.data = this.data.slice(end, this.data.length);\n\n      if (this.data.length != 0) {\n        let pages = Math.floor(this.data.length / 20) + 1;\n\n        for (let i = 0; i < pages; i++) {\n          doc.addPage();\n          doc.addImage(img, 'png', 150, 10, 60, 40); //title\n\n          doc.setFont('courier', 'bold');\n          doc.setFontSize(32);\n          doc.text('Bon De Livraison', 20, 30); //separation line\n\n          doc.setLineWidth(0.5);\n          doc.line(10, 50, 200, 50);\n          end = this.data.length > 20 ? 20 : this.data.length;\n          doc.table(10, 60, this.data.slice(0, end), this.cellConfig, {\n            headerBackgroundColor: \"#F6B853\",\n            fontSize: 11\n          });\n          this.data = this.data.slice(end, this.data.length);\n        }\n      } // Signature\n\n\n      doc.setFont('helvetica', 'bold');\n      doc.text(\"Signature\", 20, 280);\n      doc.text(\"Signature\", 130, 280);\n      doc.setFont('courier', 'normal');\n      doc.text(\"Représentant Phoenix: ........\", 20, 284);\n      doc.text(\"Client: ........\", 130, 284);\n      doc.save('Bon_De_Livraison_N°_' + selectedOrders[0].city + '.pdf');\n    }\n\n    getTableList(orders) {\n      this.data = [];\n\n      for (let order of orders) {\n        this.data.push({\n          id: order.id.toString(),\n          phone: order.phone,\n          city: order.city,\n          price: order.price.toString() + \" Dhs\"\n        });\n      }\n    }\n\n  }\n\n  BLOrderPerCityPopupComponent.ɵfac = function BLOrderPerCityPopupComponent_Factory(t) {\n    return new (t || BLOrderPerCityPopupComponent)(i0.ɵɵdirectiveInject(i1.MatDialogRef), i0.ɵɵdirectiveInject(i2.OrderService), i0.ɵɵdirectiveInject(i3.MatSnackBar));\n  };\n\n  BLOrderPerCityPopupComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: BLOrderPerCityPopupComponent,\n    selectors: [[\"app-blorder-per-city-popup\"]],\n    decls: 10,\n    vars: 2,\n    consts: [[\"appearance\", \"outline\"], [\"name\", \"city\", 3, \"ngModel\", \"ngModelChange\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"cdkFocusInitial\", \"\", \"mat-raised-button\", \"\", \"color\", \"primary\", 3, \"click\"], [3, \"value\"]],\n    template: function BLOrderPerCityPopupComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\");\n        i0.ɵɵelementStart(1, \"mat-form-field\", 0);\n        i0.ɵɵelementStart(2, \"mat-label\");\n        i0.ɵɵtext(3, \"Ville\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"mat-select\", 1);\n        i0.ɵɵlistener(\"ngModelChange\", function BLOrderPerCityPopupComponent_Template_mat_select_ngModelChange_4_listener($event) {\n          return ctx.city = $event;\n        });\n        i0.ɵɵtemplate(5, BLOrderPerCityPopupComponent_mat_option_5_Template, 2, 2, \"mat-option\", 2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"mat-hint\");\n        i0.ɵɵtext(7, \"* BL sera t\\u00E9l\\u00E9charger par ville\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"button\", 3);\n        i0.ɵɵlistener(\"click\", function BLOrderPerCityPopupComponent_Template_button_click_8_listener() {\n          return ctx.generateDocument();\n        });\n        i0.ɵɵtext(9, \"Generer le BL\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.city);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.cities);\n      }\n    },\n    directives: [i4.ɵNgNoValidate, i4.NgControlStatusGroup, i4.NgForm, i5.MatFormField, i5.MatLabel, i6.MatSelect, i4.NgControlStatus, i4.NgModel, i7.NgForOf, i5.MatHint, i8.MatButton, i9.MatOption],\n    styles: [\"button[_ngcontent-%COMP%]{margin:20px;padding:8px}\"]\n  });\n  return BLOrderPerCityPopupComponent;\n})();\nexport class City {}","map":null,"metadata":{},"sourceType":"module"}