{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { CategoryRequest } from '../../../model/category';\nimport { SnackBarFailureComponent } from '../../common/snack-bar-failure/snack-bar-failure.component';\nimport { SnackBarSuccessComponent } from '../../common/snack-bar-success/snack-bar-success.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../../services/category.service\";\nimport * as i2 from \"@angular/material/snack-bar\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/material/card\";\nimport * as i5 from \"@angular/material/form-field\";\nimport * as i6 from \"@angular/material/input\";\nimport * as i7 from \"@angular/material/icon\";\nimport * as i8 from \"@angular/common\";\nimport * as i9 from \"@angular/material/button\";\nimport * as i10 from \"@angular/material/progress-spinner\";\n\nfunction CategoryComponent_mat_error_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" champs requis \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction CategoryComponent_mat_progress_spinner_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"mat-progress-spinner\", 14);\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"mode\", ctx_r1.mode);\n  }\n}\n\nconst _c0 = function (a0) {\n  return {\n    \"color\": a0\n  };\n};\n\nexport let CategoryComponent = /*#__PURE__*/(() => {\n  class CategoryComponent {\n    constructor(categoryService, _snackBar) {\n      this.categoryService = categoryService;\n      this._snackBar = _snackBar;\n      this.mode = \"\";\n      this.loading = false;\n      this.createCategoryForm = new FormGroup({\n        name: new FormControl('', Validators.required)\n      });\n      this.category = new CategoryRequest();\n    }\n\n    ngOnInit() {}\n\n    get name() {\n      return this.createCategoryForm.get('name');\n    }\n\n    onSubmit() {\n      this.mode = \"indeterminate\";\n      this.loading = true;\n      this.category.name = this.name.value;\n      this.categoryService.createCategory(this.category).subscribe(result => {\n        this.openSnackBarSuccess(\"Categorie créé avec succès\");\n        this.name.reset();\n      }, error => {\n        this.mode = \"\";\n        this.loading = false;\n        this.openSnackBarFailure(error);\n      });\n    }\n\n    openSnackBarFailure(message) {\n      this._snackBar.openFromComponent(SnackBarFailureComponent, {\n        data: message,\n        panelClass: 'app-snack-bar-failure',\n        duration: 5000\n      });\n    }\n\n    openSnackBarSuccess(message) {\n      this._snackBar.openFromComponent(SnackBarSuccessComponent, {\n        data: message,\n        panelClass: 'app-snack-bar-success',\n        duration: 5000\n      });\n    }\n\n  }\n\n  CategoryComponent.ɵfac = function CategoryComponent_Factory(t) {\n    return new (t || CategoryComponent)(i0.ɵɵdirectiveInject(i1.CategoryService), i0.ɵɵdirectiveInject(i2.MatSnackBar));\n  };\n\n  CategoryComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CategoryComponent,\n    selectors: [[\"app-category\"]],\n    decls: 23,\n    vars: 8,\n    consts: [[1, \"create-category-container\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"create-category-card\"], [1, \"create-category-title\"], [1, \"sub-form-inputs\"], [1, \"d-flex\", \"justify-content-center\"], [\"appearance\", \"outline\"], [\"maxlength\", \"50\", \"required\", \"\", \"formControlName\", \"name\", \"matInput\", \"\", \"placeholder\", \"Placeholder\"], [\"matSuffix\", \"\", 3, \"ngStyle\"], [\"align\", \"end\"], [4, \"ngIf\"], [1, \"create-category-button\"], [\"color\", \"primary\", \"type\", \"submit\", \"mat-raised-button\", \"\", 3, \"disabled\"], [\"strokeWidth\", \"5\", \"diameter\", \"50\", 3, \"mode\", 4, \"ngIf\"], [\"strokeWidth\", \"5\", \"diameter\", \"50\", 3, \"mode\"]],\n    template: function CategoryComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"div\");\n        i0.ɵɵelementStart(2, \"form\", 1);\n        i0.ɵɵlistener(\"ngSubmit\", function CategoryComponent_Template_form_ngSubmit_2_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(3, \"mat-card\", 2);\n        i0.ɵɵelementStart(4, \"mat-card-title\", 3);\n        i0.ɵɵtext(5, \"Cat\\u00E9gorie\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"div\", 4);\n        i0.ɵɵelementStart(7, \"p\", 5);\n        i0.ɵɵelementStart(8, \"mat-form-field\", 6);\n        i0.ɵɵelementStart(9, \"mat-label\");\n        i0.ɵɵtext(10, \"Nom\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(11, \"input\", 7);\n        i0.ɵɵelementStart(12, \"mat-icon\", 8);\n        i0.ɵɵtext(13, \"style\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"mat-hint\", 9);\n        i0.ɵɵtext(15);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"mat-hint\");\n        i0.ɵɵtext(17, \"* Nom du category\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(18, CategoryComponent_mat_error_18_Template, 2, 0, \"mat-error\", 10);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"mat-card-actions\", 11);\n        i0.ɵɵelementStart(20, \"button\", 12);\n        i0.ɵɵtext(21, \"CREER \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(22, CategoryComponent_mat_progress_spinner_22_Template, 1, 1, \"mat-progress-spinner\", 13);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"formGroup\", ctx.createCategoryForm);\n        i0.ɵɵadvance(10);\n        i0.ɵɵproperty(\"ngStyle\", i0.ɵɵpureFunction1(6, _c0, ctx.name.invalid && (ctx.name.dirty || ctx.name.touched) ? \"red\" : \"black\"));\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate1(\"\", (ctx.name.value == null ? null : ctx.name.value.length) || 0, \"/50\");\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.name.invalid && (ctx.name.dirty || ctx.name.touched) && ctx.name.errors.required);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"disabled\", ctx.loading || !ctx.createCategoryForm.valid);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.loading);\n      }\n    },\n    directives: [i3.ɵNgNoValidate, i3.NgControlStatusGroup, i3.FormGroupDirective, i4.MatCard, i4.MatCardTitle, i5.MatFormField, i5.MatLabel, i3.DefaultValueAccessor, i6.MatInput, i3.MaxLengthValidator, i3.RequiredValidator, i3.NgControlStatus, i3.FormControlName, i7.MatIcon, i5.MatSuffix, i8.NgStyle, i5.MatHint, i8.NgIf, i4.MatCardActions, i9.MatButton, i5.MatError, i10.MatProgressSpinner],\n    styles: [\".create-category-card[_ngcontent-%COMP%]{padding-left:120px;padding-right:100px;margin-top:20px}.create-category-container[_ngcontent-%COMP%]{display:flex;justify-content:center;height:600px}.create-category-button[_ngcontent-%COMP%]{display:flex;justify-content:center}.create-category-title[_ngcontent-%COMP%]{display:flex;justify-content:center;font-size:30px;text-decoration:underline;padding-top:20px}.sub-form-inputs[_ngcontent-%COMP%]{margin-top:50px}\"]\n  });\n  return CategoryComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}