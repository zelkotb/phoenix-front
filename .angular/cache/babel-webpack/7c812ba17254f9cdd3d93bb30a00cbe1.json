{"ast":null,"code":"import { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { SnackBarFailureComponent } from 'src/app/components/common/snack-bar-failure/snack-bar-failure.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/order.service\";\nimport * as i2 from \"@angular/material/snack-bar\";\nexport let ListOrderComponent = /*#__PURE__*/(() => {\n  class ListOrderComponent {\n    constructor(orderService, _snackBar) {\n      this.orderService = orderService;\n      this._snackBar = _snackBar;\n      this.displayedColumns = ['id', 'name', 'phone', 'city', 'date', 'status', 'actions'];\n      this.orders = [];\n    }\n\n    ngOnInit() {\n      this.loading = true;\n      this.orderService.listOrders().subscribe(result => {\n        this.orders = result;\n        this.dataSource = new MatTableDataSource(this.orders);\n        this.dataSource.paginator = this.paginator;\n        this.dataSource.sort = this.sort;\n        this.dataSource.sort.sort({\n          id: 'id',\n          start: 'desc'\n        });\n        this.loading = false;\n      }, error => {\n        this.loading = false;\n        this.openSnackBarFailure(error);\n      });\n    }\n\n    ngAfterViewInit() {\n      if (this.dataSource != undefined) {\n        this.dataSource.paginator = this.paginator;\n        this.dataSource.sort = this.sort;\n      }\n    }\n\n    applyFilter(event) {\n      const filterValue = event.target.value;\n      this.dataSource.filter = filterValue.trim().toLowerCase();\n\n      if (this.dataSource.paginator) {\n        this.dataSource.paginator.firstPage();\n      }\n    }\n\n    openSnackBarFailure(message) {\n      this._snackBar.openFromComponent(SnackBarFailureComponent, {\n        data: message,\n        panelClass: 'app-snack-bar-failure',\n        duration: 5000\n      });\n    }\n\n  }\n\n  ListOrderComponent.ɵfac = function ListOrderComponent_Factory(t) {\n    return new (t || ListOrderComponent)(i0.ɵɵdirectiveInject(i1.OrderService), i0.ɵɵdirectiveInject(i2.MatSnackBar));\n  };\n\n  ListOrderComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ListOrderComponent,\n    selectors: [[\"app-list-order\"]],\n    viewQuery: function ListOrderComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(MatPaginator, 5);\n        i0.ɵɵviewQuery(MatSort, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.paginator = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.sort = _t.first);\n      }\n    },\n    decls: 2,\n    vars: 0,\n    template: function ListOrderComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"p\");\n        i0.ɵɵtext(1, \"list-order works!\");\n        i0.ɵɵelementEnd();\n      }\n    },\n    styles: [\"\"]\n  });\n  return ListOrderComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}