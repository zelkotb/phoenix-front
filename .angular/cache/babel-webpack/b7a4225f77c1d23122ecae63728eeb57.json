{"ast":null,"code":"import { HttpHeaders } from \"@angular/common/http\";\nimport { environment } from '../../environments/environment';\nimport { throwError } from 'rxjs';\nimport { catchError } from 'rxjs/internal/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let HistoryService = /*#__PURE__*/(() => {\n  class HistoryService {\n    constructor(http) {\n      this.http = http;\n      this.httpOptions = {\n        headers: new HttpHeaders({\n          'Content-Type': 'application/json'\n        })\n      };\n    }\n\n    listHistory() {\n      let url = environment.host + '/api/histories';\n      return this.http.get(url, this.httpOptions).pipe(catchError(err => {\n        if (err.error.httpStatusCode == 500) {\n          return throwError(\"Erreur Interne\");\n        } else {\n          return throwError(\"Erreur Inconnue\");\n        }\n      }));\n    }\n\n    listHistoryPhoenix() {\n      let url = environment.host + '/api/histories/phoenix';\n      return this.http.get(url, this.httpOptions).pipe(catchError(err => {\n        if (err.error.httpStatusCode == 500) {\n          return throwError(\"Erreur Interne\");\n        } else {\n          return throwError(\"Erreur Inconnue\");\n        }\n      }));\n    }\n\n  }\n\n  HistoryService.ɵfac = function HistoryService_Factory(t) {\n    return new (t || HistoryService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  HistoryService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: HistoryService,\n    factory: HistoryService.ɵfac,\n    providedIn: 'root'\n  });\n  return HistoryService;\n})();","map":null,"metadata":{},"sourceType":"module"}